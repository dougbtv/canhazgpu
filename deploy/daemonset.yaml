apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: canhazgpu-nodeagent
  namespace: canhazgpu-system
  labels:
    app: canhazgpu-nodeagent
spec:
  selector:
    matchLabels:
      app: canhazgpu-nodeagent
  template:
    metadata:
      labels:
        app: canhazgpu-nodeagent
    spec:
      serviceAccountName: canhazgpu-nodeagent
      hostNetwork: true
      containers:
      - name: nodeagent
        image: quay.io/dosmith/k8shazgpu-nodeagent:latest
        imagePullPolicy: Always
        securityContext:
          privileged: true
        args:
        - "--port=8082"
        - "--redis-socket=/host/run/redis/redis.sock"
        - "--redis-db=0"
        - "--cdi-path=/var/run/cdi/canhazgpu.json"
        - "--gpu-count=1"
        - "-v=2"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - containerPort: 8082
          name: http
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: cdi-root
          mountPath: /var/run/cdi
        - name: redis-sock
          mountPath: /host/run/redis/redis.sock
          readOnly: true
        # Cache directory
        - name: cache-root
          mountPath: /var/lib/canhazgpu-cache
        # CRI-O socket for image operations
        - name: crio-sock
          mountPath: /host/run/crio
          readOnly: true
        # TODO: Add containerd support when needed
        # - name: containerd-sock
        #   mountPath: /host/run/containerd/containerd.sock
        #   readOnly: true
        # - name: containerd-config
        #   mountPath: /host/etc/containerd
        #   readOnly: true
        resources:
          limits:
            cpu: 200m
            memory: 64Mi
          requests:
            cpu: 10m
            memory: 32Mi
      volumes:
      - name: cdi-root
        hostPath:
          path: /var/run/cdi
          type: DirectoryOrCreate
      - name: redis-sock
        hostPath:
          path: /run/redis/redis.sock
          type: Socket
      # Cache directory
      - name: cache-root
        hostPath:
          path: /var/lib/canhazgpu-cache
          type: DirectoryOrCreate
      # CRI-O socket for image operations
      - name: crio-sock
        hostPath:
          path: /var/run/crio
          type: DirectoryOrCreate
      # TODO: Add containerd volumes when needed
      # - name: containerd-sock
      #   hostPath:
      #     path: /run/containerd/containerd.sock
      #     type: Socket
      # - name: containerd-config
      #   hostPath:
      #     path: /etc/containerd
      #     type: DirectoryOrCreate
      tolerations:
      # Allow running on control-plane nodes for single-node dev clusters
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule

---
apiVersion: v1
kind: Service
metadata:
  name: canhazgpu-nodeagent
  namespace: canhazgpu-system
  labels:
    app: canhazgpu-nodeagent
spec:
  type: ClusterIP
  clusterIP: None  # Headless service
  selector:
    app: canhazgpu-nodeagent
  ports:
  - name: http
    port: 8082
    protocol: TCP
    targetPort: http